{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const cardTemplate = document.querySelector('#card-template').content;\r\n\r\n//функция удаления карточки\r\nfunction deleteCard(element) {\r\n  element.remove();\r\n};\r\n\r\n//функция создания карточки\r\nfunction createCard(element, currentId, likeCard, handleDeleteCard, handleOpenPopupImage) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardName = cardElement.querySelector('.card__title');\r\n\r\n  const popupDeleteCard = document.querySelector('.popup_type_delete-card');\r\n  const popupDeleteCardButton = popupDeleteCard.querySelector('.popup__button');\r\n  const idCard = element._id;\r\n\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButtonCard = cardElement.querySelector('.card__like-button');\r\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\r\n\r\n  cardImage.src = element.link;\r\n  cardName.textContent = element.name;\r\n  cardImage.alt = element.name;\r\n  cardLikeCount.textContent = element.likes.length;\r\n\r\n  if (!(element.owner._id === currentId)) {\r\n    deleteButton.setAttribute('style', 'display: none');\r\n  };\r\n\r\n  element.likes.forEach((evt) => {\r\n    if (evt._id == currentId) {\r\n      likeButtonCard.classList.add('card__like-button_is-active')\r\n    }\r\n  });\r\n\r\n  handleDeleteCard(popupDeleteCard, deleteButton, idCard, cardElement);\r\n\r\n  handleOpenPopupImage(cardImage, cardImage, cardName);\r\n\r\n  likeButtonCard.addEventListener('click', () => {\r\n    likeCard(idCard, likeButtonCard, cardLikeCount);\r\n  });\r\n  return cardElement;\r\n};\r\n\r\nexport { createCard, deleteCard };","//функция открытия модального окна\r\nfunction openModal(namePopup) {\r\n  namePopup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeKeyEsc);\r\n};\r\n\r\n//функция закрытия модального окна\r\nfunction closeModal(namePopup) {\r\n  namePopup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeKeyEsc);\r\n};\r\n\r\n//функция закрытия модального окна ESC\r\nfunction closeKeyEsc(evt) {\r\n  if (evt.keyCode === 27) {\r\n    const openPopup = document.querySelector('.popup_is-opened')\r\n    closeModal(openPopup)\r\n  };\r\n};\r\n\r\n//функция закрытия модального окна мышью\r\nfunction closeMouseClick(evt) {\r\n  const openPopup = document.querySelector('.popup_is-opened');\r\n  if (evt.target === openPopup) {\r\n    closeModal(openPopup)\r\n  };\r\n};\r\n\r\n//функция изменения кнопки при отправке данных на сервер\r\nfunction renderLoading(status, buttonPopup) {\r\n  if (status) {\r\n    buttonPopup.textContent = 'Сохранение...'\r\n  } else {\r\n    buttonPopup.textContent = 'Сохранить'\r\n  }\r\n};\r\n\r\nexport {openModal, closeModal, closeMouseClick, renderLoading };","//функция появления ошибки валидации формы\r\nfunction showInputError (formElement, inputElement, errorMessage, obj) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.add(obj.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(obj.errorClassText);\r\n}\r\n\r\n//функция скрытия ошибки валидации формы\r\nfunction hideInputError (formElement, inputElement, obj) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.remove(obj.inputErrorClass);\r\n  errorElement.classList.remove(obj.errorClassText);\r\n  errorElement.textContent = '';\r\n}\r\n\r\n//функция обработки появления/скрытия ошибки \r\nfunction isValid (formElement, inputElement, obj) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage)\r\n  } else {\r\n    inputElement.setCustomValidity(\"\")\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, obj)\r\n  } else {\r\n    hideInputError(formElement, inputElement, obj)\r\n  }\r\n};\r\n\r\n//функция проверки полей на валидность\r\nfunction hasInvalidInput (inputList, obj) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n//функиция переключения кнопки в неактивный режим, если валидация не пройдена\r\nfunction toggleButtonState (inputList, buttonElement, obj) {\r\n  if (hasInvalidInput(inputList, obj)) {\r\n    buttonElement.disabled = true\r\n    buttonElement.classList.add(obj.inactiveButtonClass)\r\n  } else {\r\n    buttonElement.disabled = false\r\n    buttonElement.classList.remove(obj.inactiveButtonClass)\r\n  }\r\n};\r\n\r\n//функция добавления обработчика на все поля формы\r\nfunction setEventListeners (formElement, obj) {\r\n  const inputList = Array.from(formElement.querySelectorAll(obj.inputSelector));\r\n  const buttonForm = formElement.querySelector(obj.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonForm, obj);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      isValid(formElement, inputElement, obj);\r\n      toggleButtonState(inputList, buttonForm, obj);\r\n    });\r\n  });\r\n};\r\n\r\n//функция отчистки ошибок валидации и полей, отключения кнопки\r\nfunction clearValidation (formElement, obj) {\r\n  const inputList = Array.from(formElement.querySelectorAll(obj.inputSelector));\r\n  const buttonForm = formElement.querySelector(obj.submitButtonSelector);\r\n  buttonForm.disabled = true\r\n  buttonForm.classList.add(obj.inactiveButtonClass)\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, obj);\r\n    inputElement.value = '';\r\n  });\r\n};\r\n\r\n//функция включения валидации\r\nfunction enableValidation (obj) {\r\n  const formList = Array.from(document.querySelectorAll(obj.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, obj);\r\n  });\r\n};\r\n\r\nexport { enableValidation, clearValidation };","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\r\n  headers: {\r\n    authorization: 'fa5bd13f-738f-4d3c-80a7-9af426469b82',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nconst handleError = (err) => {\r\n  console.log(err)\r\n};\r\n\r\n// GET запрос данных пользователя\r\nconst loadingUserData = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// GET запрос массива с карточками\r\nconst loadingCardData = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// PATCH запрос для отправки данных пользователя на сервер\r\nconst saveDataUser = (name, job) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      name: name.textContent,\r\n      about: job.textContent\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n};\r\n\r\n// PATCH запрос для отправки аватара пользователя на сервер\r\nconst saveAvatarUser = (newAvatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      avatar: newAvatar,\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n};\r\n\r\n// POST запрос для отправки данных новой карточки на сервер\r\nconst saveDataNewCard = (dataNewCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      name: dataNewCard.name,\r\n      link: dataNewCard.link\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n};\r\n\r\n// DELETE запрос для удаления карточки\r\nconst deleteCardOnServer = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      _id: idCard\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n};\r\n\r\n//PUT запрос постановки лайка\r\nconst putLikeCard = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      _id: idCard\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError)  \r\n};\r\n\r\n//DELETE запрос для снятия лайка\r\nconst deleteLikeCard = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      _id: idCard\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError)  \r\n};\r\n\r\nexport { \r\n  loadingUserData,\r\n  loadingCardData,\r\n  saveDataUser,\r\n  saveAvatarUser,\r\n  saveDataNewCard,\r\n  deleteCardOnServer,\r\n  putLikeCard,\r\n  deleteLikeCard\r\n};","import '../pages/index.css';\r\nimport { createCard, deleteCard } from './card.js';\r\nimport { openModal, closeModal, closeMouseClick, renderLoading } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { loadingUserData, loadingCardData, saveDataUser, saveAvatarUser, saveDataNewCard, deleteCardOnServer, putLikeCard, deleteLikeCard } from './api.js';\r\n\r\nconst placesList = document.querySelector('.places__list');\r\nconst popups = document.querySelectorAll('.popup');\r\nlet idUser = '';\r\n\r\nconst popupEditAvatar = document.querySelector('.popup_type_update-avatar');\r\nconst buttonPopupEditAvatar = popupEditAvatar.querySelector('.popup__button');\r\nconst buttonAvatarProfile = document.querySelector('.profile__image');\r\nconst avatarEditForm = document.querySelector('form[name=\"edit-avatar\"]');\r\nconst urlInputAvatarEditForm = avatarEditForm.querySelector('.popup__input_type_url');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst buttonPopupEdit = popupEdit.querySelector('.popup__button');\r\nconst buttonEdit = document.querySelector('.profile__edit-button');\r\nconst profileForm = document.querySelector('form[name=\"edit-profile\"]');\r\nconst nameInputProfileForm = profileForm.querySelector('.popup__input_type_name');\r\nconst jobInputProfileForm = profileForm.querySelector('.popup__input_type_description');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst buttonPopupNewCard = popupNewCard.querySelector('.popup__button')\r\nconst buttonAddNewCard = document.querySelector('.profile__add-button');\r\nconst newCardForm = document.querySelector('form[name=\"new-place\"]');\r\nconst nameInputNewCardForm = newCardForm.querySelector('.popup__input_type_card-name');\r\nconst urlInputNewCardForm = newCardForm.querySelector('.popup__input_type_url');\r\n\r\nconst popupFormImage = document.querySelector('.popup_type_image');\r\nconst popupImage = popupFormImage.querySelector('.popup__image');\r\nconst popupCaption = popupFormImage.querySelector('.popup__caption');\r\n\r\n//объект настроек для валидации\r\nconst classesObject = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button-inactive',\r\n  inputErrorClass: 'popup__input-error',\r\n  errorClassText: 'form__input-error-active'\r\n};\r\n\r\n//функция создания новой карточки\r\nfunction createNewCard(evt) {\r\n  const dataNewCard = {\r\n    name: nameInputNewCardForm.value,\r\n    link: urlInputNewCardForm.value\r\n  };\r\n  renderLoading(true, buttonPopupNewCard);\r\n  saveDataNewCard(dataNewCard)\r\n    .then((res) => {\r\n      console.log(res)\r\n      const newCard = createCard(res, idUser, likeCard, handleDeleteCard, handleOpenPopupImage)\r\n      placesList.prepend(newCard)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, buttonPopupNewCard)\r\n    });\r\n  nameInputNewCardForm.value = '';\r\n  urlInputNewCardForm.value = '';\r\n  closeModal(popupNewCard);\r\n};\r\n\r\n//функция добавления карточек\r\nfunction addCard(element) {\r\n  const placesItem = createCard(element, idUser, likeCard, handleDeleteCard, handleOpenPopupImage);\r\n  placesList.append(placesItem);\r\n};\r\n\r\n//функция редактирования данных профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n  profileName.textContent = nameInputProfileForm.value;\r\n  profileJob.textContent = jobInputProfileForm.value;\r\n  renderLoading(true, buttonPopupEdit);\r\n  saveDataUser(profileName, profileJob)\r\n    .finally(() => {\r\n      renderLoading(false, buttonPopupEdit);\r\n    })\r\n  closeModal(popupEdit);\r\n};\r\n\r\n//функция изменения аватара пользователя\r\nfunction handleAvatarFormSubmit(evt) {\r\n  const urlNewAvatar = urlInputAvatarEditForm.value;\r\n  renderLoading(true, buttonPopupEditAvatar)\r\n  saveAvatarUser(urlNewAvatar)\r\n    .then(() => {\r\n      profileAvatar.setAttribute('style', `background-image: url(${urlNewAvatar})`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, buttonPopupEditAvatar)\r\n    })\r\n  closeModal(popupEditAvatar);\r\n};\r\n\r\n\r\n//функция обработчик закрытия модального окна по крестику\r\nfunction handleClosePopup(buttonClose, namePopup) {\r\n  buttonClose.addEventListener('click', () => {\r\n    closeModal(namePopup);\r\n  })\r\n};\r\n\r\n//функция обработчик закрытия Popup по оверлею\r\nfunction handleClosePopupClickMouse(namePopup) {\r\n  namePopup.addEventListener('click', (evt) => {\r\n    closeMouseClick(evt);\r\n  });\r\n};\r\n\r\n// функция обработчик открытия Popup  с изображением\r\nfunction handleOpenPopupImage(namePopup, link, caption) {\r\n  namePopup.addEventListener('click', () => {\r\n    openModal(popupFormImage);\r\n    popupImage.src = link.src;\r\n    popupImage.alt = caption.textContent;\r\n    popupCaption.textContent = caption.textContent;\r\n  });\r\n};\r\n\r\n// функция обработчик удаления карточки\r\nfunction handleDeleteCard(popupClose, buttonOpenPopup, idCard, cardElement) {\r\n  buttonOpenPopup.addEventListener('click', () => {\r\n    openModal(popupClose);\r\n    popupClose.addEventListener('submit', () => {\r\n      deleteCardOnServer(idCard)\r\n        .then(() => {\r\n          deleteCard(cardElement)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        closeModal(popupClose);\r\n    })\r\n  })\r\n};\r\n\r\n//функция постановки/снятия лайка с карточки\r\nfunction likeCard(idCard, buttonLike, countLike) {\r\n  if (!buttonLike.classList.contains('card__like-button_is-active')) {\r\n    putLikeCard(idCard)\r\n      .then((res) => {\r\n        buttonLike.classList.add('card__like-button_is-active')\r\n        countLike.textContent = res.likes.length\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  } else{\r\n    deleteLikeCard(idCard)\r\n      .then((res) => {\r\n        buttonLike.classList.remove('card__like-button_is-active')\r\n        countLike.textContent = res.likes.length\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n};\r\n\r\n// промис для загрузки/вывода данных пользователя и списка карточек с сервера на сайт\r\nPromise.all([loadingUserData(), loadingCardData()])\r\n  .then(([dataUser, dataCard]) => {\r\n    profileName.textContent = dataUser.name\r\n    profileJob.textContent = dataUser.about\r\n    profileAvatar.setAttribute('style', `background-image: url(${dataUser.avatar})`)\r\n    idUser = dataUser._id\r\n    dataCard.forEach(addCard);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n//Добавление обработчиков\r\nbuttonEdit.addEventListener('click', () => {\r\n  clearValidation (popupEdit, classesObject);\r\n  openModal(popupEdit);\r\n  nameInputProfileForm.value = profileName.textContent;\r\n  jobInputProfileForm.value = profileJob.textContent;\r\n});\r\n\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  clearValidation (popupNewCard, classesObject);\r\n  openModal(popupNewCard);\r\n});\r\n\r\nbuttonAvatarProfile.addEventListener('click', () => {\r\n  clearValidation (popupEditAvatar, classesObject);\r\n  openModal(popupEditAvatar);\r\n});\r\n\r\npopups.forEach((popup) => {\r\n  const butttonClose = popup.querySelector('.popup__close');\r\n  handleClosePopup(butttonClose, popup);\r\n});\r\n\r\npopups.forEach((popup) => {\r\n  handleClosePopupClickMouse(popup);\r\n});\r\n\r\nprofileForm.addEventListener('submit', handleProfileFormSubmit);\r\n\r\navatarEditForm.addEventListener('submit', handleAvatarFormSubmit);\r\n\r\nnewCardForm.addEventListener('submit', createNewCard);\r\n\r\nenableValidation(classesObject); \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["cardTemplate","document","querySelector","content","createCard","element","currentId","likeCard","handleDeleteCard","handleOpenPopupImage","cardElement","cloneNode","cardImage","cardName","popupDeleteCard","idCard","_id","deleteButton","likeButtonCard","cardLikeCount","src","link","textContent","name","alt","likes","length","owner","setAttribute","forEach","evt","classList","add","addEventListener","openModal","namePopup","closeKeyEsc","closeModal","remove","removeEventListener","keyCode","renderLoading","status","buttonPopup","hideInputError","formElement","inputElement","obj","errorElement","concat","inputErrorClass","errorClassText","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","buttonForm","submitButtonSelector","value","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","handleError","err","console","log","deleteCardOnServer","fetch","method","body","JSON","stringify","then","catch","putLikeCard","deleteLikeCard","placesList","popups","idUser","popupEditAvatar","buttonPopupEditAvatar","buttonAvatarProfile","avatarEditForm","urlInputAvatarEditForm","popupEdit","buttonPopupEdit","buttonEdit","profileForm","nameInputProfileForm","jobInputProfileForm","profileName","profileJob","profileAvatar","popupNewCard","buttonPopupNewCard","buttonAddNewCard","newCardForm","nameInputNewCardForm","urlInputNewCardForm","popupFormImage","popupImage","popupCaption","classesObject","formSelector","addCard","placesItem","append","caption","popupClose","buttonOpenPopup","buttonLike","countLike","contains","all","_ref","_ref2","dataUser","dataCard","about","avatar","popup","butttonClose","openPopup","target","closeMouseClick","job","finally","newAvatar","urlNewAvatar","dataNewCard","saveDataNewCard","newCard","prepend","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners"],"sourceRoot":""}