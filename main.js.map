{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EAAeC,SAASC,cAAc,kBAAkBC,QAQ9D,SAASC,EAAWC,EAASC,EAAWC,EAAUC,EAA8BC,GAC9E,IAAMC,EAAcV,EAAaE,cAAc,iBAAiBS,WAAU,GACpEC,EAAYF,EAAYR,cAAc,gBACtCW,EAAWH,EAAYR,cAAc,gBAErCY,EAAST,EAAQU,IAEjBC,EAAeN,EAAYR,cAAc,wBACzCe,EAAiBP,EAAYR,cAAc,sBAC3CgB,EAAgBR,EAAYR,cAAc,qBAwBhD,OAtBAU,EAAUO,IAAMd,EAAQe,KACxBP,EAASQ,YAAchB,EAAQiB,KAC/BV,EAAUW,IAAMlB,EAAQiB,KACxBJ,EAAcG,YAAchB,EAAQmB,MAAMC,OAEpCpB,EAAQqB,MAAMX,MAAQT,GAC1BU,EAAaW,aAAa,QAAS,iBAGrCtB,EAAQmB,MAAMI,SAAQ,SAACC,GACjBA,EAAId,KAAOT,GACbW,EAAea,UAAUC,IAAI,8BAEjC,IAEAvB,EAA6BQ,EAAcF,EAAQJ,GAEnDD,EAAqBG,EAAWA,EAAWC,GAE3CI,EAAee,iBAAiB,SAAS,WACvCzB,EAASO,EAAQG,EAAgBC,EACnC,IACOR,CACT,CCzCA,SAASuB,EAAUC,GACjBA,EAAUJ,UAAUC,IAAI,mBACxB9B,SAAS+B,iBAAiB,UAAWG,EACvC,CAGA,SAASC,EAAWF,GAClBA,EAAUJ,UAAUO,OAAO,mBAC3BpC,SAASqC,oBAAoB,UAAWH,EAC1C,CAGA,SAASA,EAAYN,GACH,WAAZA,EAAIU,KAENH,EADkBnC,SAASC,cAAc,oBAG7C,CCTA,SAASsC,EAAgBC,EAAaC,EAAcC,GAClD,IAAMC,EAAeH,EAAYvC,cAAc,IAAD2C,OAAKH,EAAapB,KAAI,WACpEoB,EAAaZ,UAAUO,OAAOM,EAAIG,iBAClCF,EAAad,UAAUO,OAAOM,EAAII,gBAClCH,EAAavB,YAAc,EAC7B,CAwBA,SAAS2B,EAAqBC,EAAeN,GAC3CM,EAAcC,UAAW,EACzBD,EAAcnB,UAAUC,IAAIY,EAAIQ,oBAClC,CAGA,SAASC,EAAmBC,EAAWJ,EAAeN,IAbtD,SAA0BU,EAAWV,GACnC,OAAOU,EAAUC,MAAK,SAACZ,GACrB,OAAQA,EAAaa,SAASC,KAChC,GACF,CAUMC,CAAgBJ,IAGlBJ,EAAcC,UAAW,EACzBD,EAAcnB,UAAUO,OAAOM,EAAIQ,sBAHnCH,EAAqBC,EAAeN,EAKxC,CAgBA,SAASe,EAAiBjB,EAAaE,GACrC,IAAMU,EAAYM,MAAMC,KAAKnB,EAAYoB,iBAAiBlB,EAAImB,gBAE9Dd,EADmBP,EAAYvC,cAAcyC,EAAIoB,sBAChBpB,GACjCU,EAAUzB,SAAQ,SAACc,GACjBF,EAAeC,EAAaC,EAAcC,GAC1CD,EAAasB,MAAQ,EACvB,GACF,CC3EA,IAAMC,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIdC,EAAiB,SAACC,GACtB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAAD7B,OAAYyB,EAAIK,QACvC,EAkEMC,EAAc,SAAC9D,GACnB,OAAO+D,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,iBAAArB,OAAgB/B,GAAU,CACtDgE,OAAQ,MACRX,QAASF,EAAOE,UAEfY,KAAKV,EACV,EAGMW,EAAiB,SAAClE,GACtB,OAAO+D,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,iBAAArB,OAAgB/B,GAAU,CACtDgE,OAAQ,SACRX,QAASF,EAAOE,UAEfY,KAAKV,EACV,E,0GCxFA,IAgCIY,EACAC,EFuCuBvC,EExErBwC,EAAalF,SAASC,cAAc,iBACpCkF,EAASnF,SAAS4D,iBAAiB,UACrCwB,EAAS,GAEPC,EAAkBrF,SAASC,cAAc,6BACzCqF,EAAwBD,EAAgBpF,cAAc,kBACtDsF,EAAsBvF,SAASC,cAAc,mBAC7CuF,EAAiBxF,SAASC,cAAc,4BACxCwF,EAAyBD,EAAevF,cAAc,0BAEtDyF,EAAY1F,SAASC,cAAc,oBACnC0F,EAAkBD,EAAUzF,cAAc,kBAC1C2F,EAAa5F,SAASC,cAAc,yBACpC4F,EAAc7F,SAASC,cAAc,6BACrC6F,EAAuBD,EAAY5F,cAAc,2BACjD8F,EAAsBF,EAAY5F,cAAc,kCAChD+F,EAAchG,SAASC,cAAc,mBACrCgG,EAAajG,SAASC,cAAc,yBACpCiG,EAAgBlG,SAASC,cAAc,mBAEvCkG,EAAenG,SAASC,cAAc,wBACtCmG,EAAqBD,EAAalG,cAAc,kBAChDoG,EAAmBrG,SAASC,cAAc,wBAC1CqG,EAActG,SAASC,cAAc,0BACrCsG,EAAuBD,EAAYrG,cAAc,gCACjDuG,EAAsBF,EAAYrG,cAAc,0BAEhDwG,EAAiBzG,SAASC,cAAc,qBACxCyG,EAAaD,EAAexG,cAAc,iBAC1C0G,EAAeF,EAAexG,cAAc,mBAE5C2G,EAAqB5G,SAASC,cAAc,2BAK5C4G,EAAgB,CACpBC,aAAc,eACdjD,cAAe,gBACfC,qBAAsB,iBACtBZ,oBAAqB,yBACrBL,gBAAiB,qBACjBC,eAAgB,4BAIlB,SAASiE,EAAcrC,EAAQsC,GAC7BA,EAAY5F,YAAcsD,EAAS,gBAAkB,WACvD,CAyBA,SAASuC,EAAQ7G,GACf,IAAM8G,EAAa/G,EAAWC,EAASgF,EAAQ9E,EAAUC,EAA8BC,GACvF0E,EAAWiC,OAAOD,EACpB,CAuDA,SAAS1G,EAAqByB,EAAWd,EAAMiG,GAC7CnF,EAAUF,iBAAiB,SAAS,WAClCC,EAAUyE,GACVC,EAAWxF,IAAMC,EAAKD,IACtBwF,EAAWpF,IAAM8F,EAAQhG,YACzBuF,EAAavF,YAAcgG,EAAQhG,WACrC,GACF,CAGA,SAASb,EAA6B8G,EAAiBxG,EAAQJ,GAC7D4G,EAAgBtF,iBAAiB,SAAS,WACxCC,EAAU4E,GACV5B,EAAevE,EACfwE,EAAiBpE,CACnB,GACF,CAeA,SAASP,EAASO,EAAQyG,EAAYC,IACjBD,EAAWzF,UAAU2F,SAAS,+BAAiCzC,EAAiBJ,GACxF9D,GACRiE,MAAK,SAACT,GACLiD,EAAWzF,UAAU4F,OAAO,+BAC5BF,EAAUnG,YAAciD,EAAI9C,MAAMC,MACpC,IACCkG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,GAClC,CAGAnD,QAAQsD,IAAI,CDlKHlD,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UAEfY,KAAKV,GAKDQ,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UAEfY,KAAKV,KCwJPU,MAAK,SAAAiD,GAA0B,I,IAAAC,G,EAAA,E,4CAAAD,I,o2BAAxBE,EAAQD,EAAA,GAAEE,EAAQF,EAAA,GACxBhC,EAAY5E,YAAc6G,EAAS5G,KACnC4E,EAAW7E,YAAc6G,EAASE,MAClCjC,EAAcxE,aAAa,QAAS,yBAAFkB,OAA2BqF,EAASG,OAAM,MAC5EhD,EAAS6C,EAASnH,IAClBoH,EAASvG,QAAQsF,EACnB,IACCS,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IAGF/B,EAAW7D,iBAAiB,SAAS,WACnC0B,EAAiBiC,EAAWmB,GAC5B7E,EAAU0D,GACVI,EAAqB/B,MAAQiC,EAAY5E,YACzC2E,EAAoBhC,MAAQkC,EAAW7E,WACzC,IAEAiF,EAAiBtE,iBAAiB,SAAS,WACzC0B,EAAiB0C,EAAcU,GAC/B7E,EAAUmE,EACZ,IAEAZ,EAAoBxD,iBAAiB,SAAS,WAC5C0B,EAAiB4B,EAAiBwB,GAClC7E,EAAUqD,EACZ,IAEAF,EAAOxD,SAAQ,SAAC0G,GACd,IAvFqCpG,EAuF/BqG,EAAeD,EAAMpI,cAAc,iBAvFJgC,EAwFNoG,EAAdC,EAvFLvG,iBAAiB,SAAS,WACpCI,EAAWF,EACb,GAsFF,IAEAkD,EAAOxD,SAAQ,SAAC0G,GACaA,EApFjBtG,iBAAiB,SAAS,SAACH,IH9GvC,SAAyBA,GACvB,IAAM2G,EAAYvI,SAASC,cAAc,oBACrC2B,EAAI4G,SAAWD,GACjBpG,EAAWoG,EAEf,CG0GIE,CAAgB7G,EAClB,GAmFF,IAEAiE,EAAY9D,iBAAiB,UArI7B,SAAiCH,GAC/B,IAAM8G,EAAc,CAClBrH,KAAMyE,EAAqB/B,MAC3B4E,IAAK5C,EAAoBhC,OAE3BgD,GAAc,EAAMpB,GD1DD,SAAC+C,GACpB,OAAO9D,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,aAAa,CACzCY,OAAQ,QACRX,QAASF,EAAOE,QAChB0E,KAAMC,KAAKC,UAAW,CACpBzH,KAAMqH,EAAYrH,KAClB8G,MAAOO,EAAYC,QAGpB7D,KAAKV,EACV,CCiDE2E,CAAaL,GACV5D,MAAK,SAACT,GACL2B,EAAY5E,YAAciD,EAAIhD,KAC9B4E,EAAW7E,YAAciD,EAAI8D,KAC/B,IACCT,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCqB,SAAQ,WACPjC,GAAc,EAAOpB,EACvB,IACFxD,EAAWuD,EACb,IAqHAF,EAAezD,iBAAiB,UAlHhC,SAAgCH,GAC9B,ID9DsBqH,EC8DhBC,EAAezD,EAAuB1B,MAC5CgD,GAAc,EAAMzB,ID/DE2D,ECgEPC,ED/DRtE,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,oBAAoB,CAChDY,OAAQ,QACRX,QAASF,EAAOE,QAChB0E,KAAMC,KAAKC,UAAW,CACpBV,OAAQa,MAGTnE,KAAKV,ICyDLU,MAAK,SAACT,GACL6B,EAAcxE,aAAa,QAAS,yBAAFkB,OAA2ByB,EAAI+D,OAAM,KACzE,IACCV,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCqB,SAAQ,WACPjC,GAAc,EAAOzB,EACvB,IACFnD,EAAWkD,EACb,IAsGAiB,EAAYvE,iBAAiB,UArK7B,SAAuBH,GACrB,IAAMuH,EAAc,CAClB9H,KAAMkF,EAAqBxC,MAC3B5C,KAAMqF,EAAoBzC,OAE5BgD,GAAc,EAAMX,GDLE,SAAC+C,GACvB,OAAOvE,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,UAAU,CACtCY,OAAQ,OACRX,QAASF,EAAOE,QAChB0E,KAAMC,KAAKC,UAAW,CACpBzH,KAAM8H,EAAY9H,KAClBF,KAAMgI,EAAYhI,SAGnB2D,KAAKV,EACV,CCJEgF,CAAgBD,GACbrE,MAAK,SAACT,GACL,IAAMgF,EAAUlJ,EAAWkE,EAAKe,EAAQ9E,EAAUC,EAA8BC,GAChF0E,EAAWoE,QAAQD,EACrB,IACC3B,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCqB,SAAQ,WACPjC,GAAc,EAAOX,EACvB,IACFD,EAAaoD,MACbpH,EAAWgE,EACb,IAoJAS,EAAmB7E,iBAAiB,UApEpC,WDtF2B,IAAClB,KCuFPoE,EDtFZL,MAAM,GAADhC,OAAIoB,EAAOC,QAAO,WAAArB,OAAU/B,GAAU,CAChDgE,OAAQ,SACRX,QAASF,EAAOE,UAEfY,KAAKV,ICmFLU,MAAK,WACOE,EJ3JP5C,QI4JN,IACCsF,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACAxF,EAAWyE,EACf,IFvF2BlE,EEoJVmE,EFnJEnD,MAAMC,KAAK3D,SAAS4D,iBAAiBlB,EAAIoE,eACjDnF,SAAQ,SAACa,GAChBA,EAAYT,iBAAiB,UAAU,SAAUH,GAC/CA,EAAI4H,gBACN,IA7BJ,SAA4BhH,EAAaE,GACvC,IAAMU,EAAYM,MAAMC,KAAKnB,EAAYoB,iBAAiBlB,EAAImB,gBACxD4F,EAAajH,EAAYvC,cAAcyC,EAAIoB,sBACjDX,EAAkBC,EAAWqG,EAAY/G,GACzCU,EAAUzB,SAAQ,SAACc,GACjBA,EAAaV,iBAAiB,SAAS,YA1C3C,SAAkBS,EAAaC,EAAcC,GACvCD,EAAaa,SAASoG,gBACxBjH,EAAakH,kBAAkBlH,EAAamH,QAAQC,cAEpDpH,EAAakH,kBAAkB,IAE5BlH,EAAaa,SAASC,MAGzBhB,EAAeC,EAAaC,EAAcC,GAzB9C,SAAyBF,EAAaC,EAAcoH,EAAcnH,GAChE,IAAMC,EAAeH,EAAYvC,cAAc,IAAD2C,OAAKH,EAAapB,KAAI,WACpEoB,EAAaZ,UAAUC,IAAIY,EAAIG,iBAC/BF,EAAavB,YAAcyI,EAC3BlH,EAAad,UAAUC,IAAIY,EAAII,eACjC,CAkBIgH,CAAetH,EAAaC,EAAcA,EAAasH,kBAAmBrH,EAI9E,CAgCMsH,CAAQxH,EAAaC,EAAcC,GACnCS,EAAkBC,EAAWqG,EAAY/G,EAC3C,GACF,GACF,CAoBIuH,CAAkBzH,EAAaE,EACjC,G","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const cardTemplate = document.querySelector('#card-template').content;\r\n\r\n//функция удаления карточки\r\nfunction deleteCard(element) {\r\n  element.remove();\r\n};\r\n\r\n//функция создания карточки\r\nfunction createCard(element, currentId, likeCard, handleOpenPopupConfirmDelete, handleOpenPopupImage) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardName = cardElement.querySelector('.card__title');\r\n\r\n  const idCard = element._id;\r\n\r\n  const deleteButton = cardElement.querySelector('.card__delete-button');\r\n  const likeButtonCard = cardElement.querySelector('.card__like-button');\r\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\r\n\r\n  cardImage.src = element.link;\r\n  cardName.textContent = element.name;\r\n  cardImage.alt = element.name;\r\n  cardLikeCount.textContent = element.likes.length;\r\n\r\n  if (!(element.owner._id === currentId)) {\r\n    deleteButton.setAttribute('style', 'display: none');\r\n  };\r\n\r\n  element.likes.forEach((evt) => {\r\n    if (evt._id == currentId) {\r\n      likeButtonCard.classList.add('card__like-button_is-active')\r\n    }\r\n  });\r\n\r\n  handleOpenPopupConfirmDelete(deleteButton, idCard, cardElement);\r\n\r\n  handleOpenPopupImage(cardImage, cardImage, cardName);\r\n\r\n  likeButtonCard.addEventListener('click', () => {\r\n    likeCard(idCard, likeButtonCard, cardLikeCount);\r\n  });\r\n  return cardElement;\r\n};\r\n\r\nexport { createCard, deleteCard };","//функция открытия модального окна\r\nfunction openModal(namePopup) {\r\n  namePopup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeKeyEsc);\r\n};\r\n\r\n//функция закрытия модального окна\r\nfunction closeModal(namePopup) {\r\n  namePopup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeKeyEsc);\r\n};\r\n\r\n//функция закрытия модального окна ESC\r\nfunction closeKeyEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openPopup = document.querySelector('.popup_is-opened')\r\n    closeModal(openPopup)\r\n  };\r\n};\r\n\r\n//функция закрытия модального окна мышью\r\nfunction closeMouseClick(evt) {\r\n  const openPopup = document.querySelector('.popup_is-opened');\r\n  if (evt.target === openPopup) {\r\n    closeModal(openPopup)\r\n  };\r\n};\r\n\r\nexport {openModal, closeModal, closeMouseClick };","//функция появления ошибки валидации формы\r\nfunction showInputError (formElement, inputElement, errorMessage, obj) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.add(obj.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(obj.errorClassText);\r\n}\r\n\r\n//функция скрытия ошибки валидации формы\r\nfunction hideInputError (formElement, inputElement, obj) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.remove(obj.inputErrorClass);\r\n  errorElement.classList.remove(obj.errorClassText);\r\n  errorElement.textContent = '';\r\n}\r\n\r\n//функция обработки появления/скрытия ошибки \r\nfunction isValid (formElement, inputElement, obj) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage)\r\n  } else {\r\n    inputElement.setCustomValidity(\"\")\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, obj)\r\n  } else {\r\n    hideInputError(formElement, inputElement, obj)\r\n  }\r\n};\r\n\r\n//функция проверки полей на валидность\r\nfunction hasInvalidInput (inputList, obj) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// механика переключения кнопки в неактивный режим\r\nfunction disableSubmitButton (buttonElement, obj) {\r\n  buttonElement.disabled = true\r\n  buttonElement.classList.add(obj.inactiveButtonClass)\r\n};\r\n\r\n//функиция переключения кнопки в неактивный режим, если валидация не пройдена\r\nfunction toggleButtonState (inputList, buttonElement, obj) {\r\n  if (hasInvalidInput(inputList, obj)) {\r\n    disableSubmitButton (buttonElement, obj)\r\n  } else {\r\n    buttonElement.disabled = false\r\n    buttonElement.classList.remove(obj.inactiveButtonClass)\r\n  }\r\n};\r\n\r\n//функция добавления обработчика на все поля формы\r\nfunction setEventListeners (formElement, obj) {\r\n  const inputList = Array.from(formElement.querySelectorAll(obj.inputSelector));\r\n  const buttonForm = formElement.querySelector(obj.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonForm, obj);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      isValid(formElement, inputElement, obj);\r\n      toggleButtonState(inputList, buttonForm, obj);\r\n    });\r\n  });\r\n};\r\n\r\n//функция отчистки ошибок валидации и полей, отключения кнопки\r\nfunction clearValidation (formElement, obj) {\r\n  const inputList = Array.from(formElement.querySelectorAll(obj.inputSelector));\r\n  const buttonForm = formElement.querySelector(obj.submitButtonSelector);\r\n  disableSubmitButton (buttonForm, obj);\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, obj);\r\n    inputElement.value = '';\r\n  });\r\n};\r\n\r\n//функция включения валидации\r\nfunction enableValidation (obj) {\r\n  const formList = Array.from(document.querySelectorAll(obj.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, obj);\r\n  });\r\n};\r\n\r\nexport { enableValidation, clearValidation };","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\r\n  headers: {\r\n    authorization: 'fa5bd13f-738f-4d3c-80a7-9af426469b82',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n// GET запрос данных пользователя\r\nconst loadingUserData = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// GET запрос массива с карточками\r\nconst loadingCardData = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// PATCH запрос для отправки данных пользователя на сервер\r\nconst saveDataUser = (dataProfile) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      name: dataProfile.name,\r\n      about: dataProfile.job\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// PATCH запрос для отправки аватара пользователя на сервер\r\nconst saveAvatarUser = (newAvatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      avatar: newAvatar,\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// POST запрос для отправки данных новой карточки на сервер\r\nconst saveDataNewCard = (dataNewCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify ({\r\n      name: dataNewCard.name,\r\n      link: dataNewCard.link\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n// DELETE запрос для удаления карточки\r\nconst deleteCardOnServer = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n//PUT запрос постановки лайка\r\nconst putLikeCard = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse) \r\n};\r\n\r\n//DELETE запрос для снятия лайка\r\nconst deleteLikeCard = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\nexport { \r\n  loadingUserData,\r\n  loadingCardData,\r\n  saveDataUser,\r\n  saveAvatarUser,\r\n  saveDataNewCard,\r\n  deleteCardOnServer,\r\n  putLikeCard,\r\n  deleteLikeCard\r\n};","import '../pages/index.css';\r\nimport { createCard, deleteCard } from './card.js';\r\nimport { openModal, closeModal, closeMouseClick } from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { loadingUserData, loadingCardData, saveDataUser, saveAvatarUser, saveDataNewCard, deleteCardOnServer, putLikeCard, deleteLikeCard } from './api.js';\r\n\r\nconst placesList = document.querySelector('.places__list');\r\nconst popups = document.querySelectorAll('.popup');\r\nlet idUser = '';\r\n\r\nconst popupEditAvatar = document.querySelector('.popup_type_update-avatar');\r\nconst buttonPopupEditAvatar = popupEditAvatar.querySelector('.popup__button');\r\nconst buttonAvatarProfile = document.querySelector('.profile__image');\r\nconst avatarEditForm = document.querySelector('form[name=\"edit-avatar\"]');\r\nconst urlInputAvatarEditForm = avatarEditForm.querySelector('.popup__input_type_url');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst buttonPopupEdit = popupEdit.querySelector('.popup__button');\r\nconst buttonEdit = document.querySelector('.profile__edit-button');\r\nconst profileForm = document.querySelector('form[name=\"edit-profile\"]');\r\nconst nameInputProfileForm = profileForm.querySelector('.popup__input_type_name');\r\nconst jobInputProfileForm = profileForm.querySelector('.popup__input_type_description');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst buttonPopupNewCard = popupNewCard.querySelector('.popup__button')\r\nconst buttonAddNewCard = document.querySelector('.profile__add-button');\r\nconst newCardForm = document.querySelector('form[name=\"new-place\"]');\r\nconst nameInputNewCardForm = newCardForm.querySelector('.popup__input_type_card-name');\r\nconst urlInputNewCardForm = newCardForm.querySelector('.popup__input_type_url');\r\n\r\nconst popupFormImage = document.querySelector('.popup_type_image');\r\nconst popupImage = popupFormImage.querySelector('.popup__image');\r\nconst popupCaption = popupFormImage.querySelector('.popup__caption');\r\n\r\nconst popupConfirmDelete = document.querySelector('.popup_type_delete-card');\r\nlet cardToDelete;\r\nlet cardIdToDelete;\r\n\r\n//объект настроек для валидации\r\nconst classesObject = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button-inactive',\r\n  inputErrorClass: 'popup__input-error',\r\n  errorClassText: 'form__input-error-active'\r\n};\r\n\r\n//функция изменения кнопки при отправке данных на сервер\r\nfunction renderLoading(status, buttonPopup) {\r\n  buttonPopup.textContent = status ? 'Сохранение...' : 'Сохранить' ;\r\n};\r\n\r\n//функция создания новой карточки\r\nfunction createNewCard(evt) {\r\n  const dataNewCard = {\r\n    name: nameInputNewCardForm.value,\r\n    link: urlInputNewCardForm.value\r\n  };\r\n  renderLoading(true, buttonPopupNewCard);\r\n  saveDataNewCard(dataNewCard)\r\n    .then((res) => {\r\n      const newCard = createCard(res, idUser, likeCard, handleOpenPopupConfirmDelete, handleOpenPopupImage)\r\n      placesList.prepend(newCard)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, buttonPopupNewCard)\r\n    });\r\n  popupNewCard.reset;\r\n  closeModal(popupNewCard);\r\n};\r\n\r\n//функция добавления карточек\r\nfunction addCard(element) {\r\n  const placesItem = createCard(element, idUser, likeCard, handleOpenPopupConfirmDelete, handleOpenPopupImage);\r\n  placesList.append(placesItem);\r\n};\r\n\r\n//функция редактирования данных профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n  const dataProfile = {\r\n    name: nameInputProfileForm.value,\r\n    job: jobInputProfileForm.value\r\n  }\r\n  renderLoading(true, buttonPopupEdit);\r\n  saveDataUser(dataProfile)\r\n    .then((res) => {\r\n      profileName.textContent = res.name;\r\n      profileJob.textContent = res.about;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, buttonPopupEdit)\r\n    });\r\n  closeModal(popupEdit);\r\n};\r\n\r\n//функция изменения аватара пользователя\r\nfunction handleAvatarFormSubmit(evt) {\r\n  const urlNewAvatar = urlInputAvatarEditForm.value;\r\n  renderLoading(true, buttonPopupEditAvatar)\r\n  saveAvatarUser(urlNewAvatar)\r\n    .then((res) => {\r\n      profileAvatar.setAttribute('style', `background-image: url(${res.avatar})`);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, buttonPopupEditAvatar)\r\n    });\r\n  closeModal(popupEditAvatar);\r\n};\r\n\r\n//функция обработчик закрытия модального окна по крестику\r\nfunction handleClosePopup(buttonClose, namePopup) {\r\n  buttonClose.addEventListener('click', () => {\r\n    closeModal(namePopup);\r\n  })\r\n};\r\n\r\n//функция обработчик закрытия Popup по оверлею\r\nfunction handleClosePopupClickMouse(namePopup) {\r\n  namePopup.addEventListener('click', (evt) => {\r\n    closeMouseClick(evt);\r\n  });\r\n};\r\n\r\n// функция обработчик открытия Popup  с изображением\r\nfunction handleOpenPopupImage(namePopup, link, caption) {\r\n  namePopup.addEventListener('click', () => {\r\n    openModal(popupFormImage);\r\n    popupImage.src = link.src;\r\n    popupImage.alt = caption.textContent;\r\n    popupCaption.textContent = caption.textContent;\r\n  });\r\n};\r\n\r\n// функция обработчик открытия окна конферма удаления карточки\r\nfunction handleOpenPopupConfirmDelete(buttonOpenPopup, idCard, cardElement) {\r\n  buttonOpenPopup.addEventListener('click', () => {\r\n    openModal(popupConfirmDelete);\r\n    cardToDelete = cardElement;\r\n    cardIdToDelete = idCard;\r\n  });\r\n};\r\n\r\n// функция обработчик удаления карточки\r\nfunction handleDeleteCard() {\r\n  deleteCardOnServer(cardIdToDelete)\r\n    .then(() => {\r\n      deleteCard(cardToDelete)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    closeModal(popupConfirmDelete)\r\n};\r\n\r\n//функция постановки/снятия лайка с карточки\r\nfunction likeCard(idCard, buttonLike, countLike) {\r\n  const likeMethod = buttonLike.classList.contains('card__like-button_is-active') ? deleteLikeCard : putLikeCard;\r\n  likeMethod(idCard) \r\n    .then((res) => {\r\n      buttonLike.classList.toggle('card__like-button_is-active') \r\n      countLike.textContent = res.likes.length\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n// промис для загрузки/вывода данных пользователя и списка карточек с сервера на сайт\r\nPromise.all([loadingUserData(), loadingCardData()])\r\n  .then(([dataUser, dataCard]) => {\r\n    profileName.textContent = dataUser.name\r\n    profileJob.textContent = dataUser.about\r\n    profileAvatar.setAttribute('style', `background-image: url(${dataUser.avatar})`)\r\n    idUser = dataUser._id\r\n    dataCard.forEach(addCard);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err)\r\n  });\r\n\r\n//Добавление обработчиков\r\nbuttonEdit.addEventListener('click', () => {\r\n  clearValidation (popupEdit, classesObject);\r\n  openModal(popupEdit);\r\n  nameInputProfileForm.value = profileName.textContent;\r\n  jobInputProfileForm.value = profileJob.textContent;\r\n});\r\n\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  clearValidation (popupNewCard, classesObject);\r\n  openModal(popupNewCard);\r\n});\r\n\r\nbuttonAvatarProfile.addEventListener('click', () => {\r\n  clearValidation (popupEditAvatar, classesObject);\r\n  openModal(popupEditAvatar);\r\n});\r\n\r\npopups.forEach((popup) => {\r\n  const butttonClose = popup.querySelector('.popup__close');\r\n  handleClosePopup(butttonClose, popup);\r\n});\r\n\r\npopups.forEach((popup) => {\r\n  handleClosePopupClickMouse(popup);\r\n});\r\n\r\nprofileForm.addEventListener('submit', handleProfileFormSubmit);\r\n\r\navatarEditForm.addEventListener('submit', handleAvatarFormSubmit);\r\n\r\nnewCardForm.addEventListener('submit', createNewCard);\r\n\r\npopupConfirmDelete.addEventListener('submit', handleDeleteCard);\r\n\r\nenableValidation(classesObject);"],"names":["cardTemplate","document","querySelector","content","createCard","element","currentId","likeCard","handleOpenPopupConfirmDelete","handleOpenPopupImage","cardElement","cloneNode","cardImage","cardName","idCard","_id","deleteButton","likeButtonCard","cardLikeCount","src","link","textContent","name","alt","likes","length","owner","setAttribute","forEach","evt","classList","add","addEventListener","openModal","namePopup","closeKeyEsc","closeModal","remove","removeEventListener","key","hideInputError","formElement","inputElement","obj","errorElement","concat","inputErrorClass","errorClassText","disableSubmitButton","buttonElement","disabled","inactiveButtonClass","toggleButtonState","inputList","some","validity","valid","hasInvalidInput","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","value","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","status","putLikeCard","fetch","method","then","deleteLikeCard","cardToDelete","cardIdToDelete","placesList","popups","idUser","popupEditAvatar","buttonPopupEditAvatar","buttonAvatarProfile","avatarEditForm","urlInputAvatarEditForm","popupEdit","buttonPopupEdit","buttonEdit","profileForm","nameInputProfileForm","jobInputProfileForm","profileName","profileJob","profileAvatar","popupNewCard","buttonPopupNewCard","buttonAddNewCard","newCardForm","nameInputNewCardForm","urlInputNewCardForm","popupFormImage","popupImage","popupCaption","popupConfirmDelete","classesObject","formSelector","renderLoading","buttonPopup","addCard","placesItem","append","caption","buttonOpenPopup","buttonLike","countLike","contains","toggle","catch","err","console","log","all","_ref","_ref2","dataUser","dataCard","about","avatar","popup","butttonClose","openPopup","target","closeMouseClick","dataProfile","job","body","JSON","stringify","saveDataUser","finally","newAvatar","urlNewAvatar","dataNewCard","saveDataNewCard","newCard","prepend","reset","preventDefault","buttonForm","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners"],"sourceRoot":""}